## Copyright (c) 2015 SONATA-NFV, 2017 5GTANGO
## ALL RIGHTS RESERVED.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
## Neither the name of the SONATA-NFV, 5GTANGO
## nor the names of its contributors may be used to endorse or promote
## products derived from this software without specific prior written
## permission.
##
## This work has been performed in the framework of the SONATA project,
## funded by the European Commission under Grant number 671517 through
## the Horizon 2020 and 5G-PPP programmes. The authors would like to
## acknowledge the contributions of their colleagues of the SONATA
## partner consortium (www.sonata-nfv.eu).
##
## This work has been performed in the framework of the 5GTANGO project,
## funded by the European Commission under Grant number 761493 through
## the Horizon 2020 and 5G-PPP programmes. The authors would like to
## acknowledge the contributions of their colleagues of the 5GTANGO
## partner consortium (www.5gtango.eu).


---
$schema: "http://json-schema.org/draft-04/schema#"
title: "Test Descriptor Schema"
version: 1.0
description: "The schema for 5GTANGO Test Descriptor"

##
## Some definitions used in the document schema definition.
##
definitions:
  platform:
     enum:
       - "SONATA"
       - "OSM"
       - "ONAP"

##
## The main document schema definition.
##
type: "object"
properties:
  descriptor_schema:
    description: "Reference to the schema corresponding to the descriptor (e.g., URL or local path)."
    type: "string"
  vendor:
    description: "The vendor id allows identification of a test descriptor uniquely."
    type: "string"
    pattern: "^[a-z0-9\\-_.]+$"
  name:
    description: "The name of the test description."
    type: "string"
    pattern: "^[a-z0-9\\-_.]+$"
  version:
    description: "The version of the test descriptor."
    type: "string"
    pattern: "^[0-9\\-_.]+$"
  author:
    description: "The person or organization that created the test descriptor."
    type: "string"
  description:
    description: "A longer description of the test descriptor."
    type: "string"
  service_platforms:
    type: array
    items:
      $ref: "#/definitions/platform"
  test_tags:
     type: array
     items:
      type: string
      description: "test tag"
      pattern: "^[a-z0-9\\-_.]+$"
  test_category:
    type: array
    items:
      type: string
      description: "category type"
      pattern: "^[a-z0-9\\-_.]+$"
  phases:
    type: array
#    description: "test phases array"
    items:
      type: object
      properties:
        id:
          type: string
          description: "phase name or reference definition"
          pattern: "^[a-z0-9\\-_.]+$"
        steps:
          type: array
#          description: "phase steps array"
          items:
            type: object
            properties:
              name:
               type: string
               description: "step name string"
        #       pattern: "^[a-z0-9\\-_.]+$"
              step:
               type: string
               description: "reference step name string"
        #       pattern: "^[a-z0-9\\-_.]+$"
              action:
               type: string
               description: "step action name string"
        #      pattern: "^[a-z0-9\\-_.]+$"
              instantiation_parameters:
                type: array
                items:
                  type: object
                  properties:
                    ingress:
                     type: string
                     description: "ingress IP string"
              #       pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}↵
                                              #(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
                    egress:
                     type: string
                     description: "egress IP string"
              #      pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}↵
                                             #(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
              run:
               type: string
               description: "step run reference string"
        #      pattern: "^[a-z0-9\\-_.]+$"
              index:
                type: integer
                description: "step index string"
              start_delay:
                type: integer
                description: "step start delay string"
              instances:
                type: integer
                description: "step number of instances string"
              dependencies:
                type: array
                items:
                  type: string
                  description: "probe dependency string"
        #         pattern: "^[a-z0-9\\-_.]+$"
              output:
                 type: array
#                 description: "test output array"
                 items:
                  type: object
                  properties:
                    results:
                     type: string
                     description: "output results filename"
              #       pattern: "^[a-z0-9\\-_.]+$"
                    graphs:
                     type: string
                     description: "output graphs filename"
              #       pattern: "^[a-z0-9\\-_.]+$"
              condition:
                 type: array
#                 description: "condition of the step which should be accepted"
                 items:
                  type: object
                  properties:
                    parser:
                      type: array
#                     description: "condition of the step which should be accepted"
                      items:
                        type: object
                        properties:
                          file:
                           type: string
                           description: "filename"
                    #       pattern: "^[a-z0-9\\-_.]+$"
                          file_type:
                           type: string
                           description: "???"
                    #       pattern: "^[a-z0-9\\-_.]+$"
                          find:
                           type: string
                           description: "???"
                    #       pattern: "^[a-z0-9\\-_.]+$"
                          value:
                           type: string
                           description: "expected value"
                    #       pattern: "^[a-z0-9\\-_.]+$"
                          verdict:
                           type: string
                           description: "expected verdict"
                    #       pattern: "^[a-z0-9\\-_.]+$"
              probes:
               type: array
#               description: "probes array"
               items:
                type: object
                properties:
                  id:
                   type: string
                   description: "probe reference id string"
            #       pattern: "^[a-z0-9\\-_.]+$"
                  name:
                   type: string
                   description: "probe name string"
            #       pattern: "^[a-z0-9\\-_.]+$"
                  image:
                   type: string
                   description: "probe container image name string"
            #       pattern: "^[a-z0-9\\-_.]+$"
                  description:
                   type: string
            #       pattern: "^[a-z0-9\\-_.]+$"
                  parameters:
                    description: "The parameters as key-value pair that are passed to the Docker container. Can be used to configure the Docker."
                    type: array
                    items:
                      description: "A key-value parameter object."
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      required:
                        - key
                        - value
                      additionalProperties: false
                    uniqueItems: true
