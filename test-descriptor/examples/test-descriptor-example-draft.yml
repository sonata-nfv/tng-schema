## Copyright (c) 2015 SONATA-NFV, 2017 5GTANGO
## ALL RIGHTS RESERVED.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
## Neither the name of the SONATA-NFV, 5GTANGO
## nor the names of its contributors may be used to endorse or promote
## products derived from this software without specific prior written
## permission.
##
## This work has been performed in the framework of the SONATA project,
## funded by the European Commission under Grant number 671517 through
## the Horizon 2020 and 5G-PPP programmes. The authors would like to
## acknowledge the contributions of their colleagues of the SONATA
## partner consortium (www.sonata-nfv.eu).
##
## This work has been performed in the framework of the 5GTANGO project,
## funded by the European Commission under Grant number 761493 through
## the Horizon 2020 and 5G-PPP programmes. The authors would like to
## acknowledge the contributions of their colleagues of the 5GTANGO
## partner consortium (www.5gtango.eu).

descriptor_schema: "https://raw.githubusercontent.com/sonata-nfv/tng-schema/master/test-descriptor/testdescriptor-schema.yml"
vendor: "eu.5gtango.atos"
name: "test-immersive-media"
version: "0.1"
author: "Ignacio Dominguez, Felipe Vicens (ATOS)"
description: >
  "Performance test for video analysis"
service_platforms:
  - SONATA
test_tags:
  - rtmp-media-service
test_category:
  - benchmarking
phases:
  - id: setup
    steps:
      - name: deployment
        description: Deploying a NS
        action: deploy
        # instantiation_parameters:
        #  - ingress: x.x.x.x
        #  - egress: x.x.x.x
      - name: configuration
        description:
        action: configure
        probes:
          - id: initiator
            name: initiator
            image: sonatanfv/tng-media-pilot-initiator
            description: "A service initial configuration container"
            parameters:
              - key: CAMERA
                value: test
              - key: CMS
                value: cms-vnfd.api.serviceendpoint
          - id: cpe
            name: cpe
            image: sonatanfv/tng-media-pilot-cpe
            description: "Content Producer Emulator (CPE) To generate a RTMP flow"
            parameters:
              - key: AGGREGATOR
                value: ma-vnfd.rtmp.serviceendpoint
              - key: APP
                value: test
              - key: STREAM
                value: test
          - id: cce
            name: cce
            image: sonatanfv/tng-media-pilot-cce
            description: "Content Consumer Emulator (CCE) To play HLS flows from Streaming engine"
            parameters:
              - key: STREAMMING_ENGINE
                value: mse-vnfd.hls.serviceendpoint
              - key: STREAM
                value: test
  - id: excercise
    steps:
      - name: configure_service
        description: Configuration of the service previuos start tests
        run: initiator
        index: 0
        start_delay: 0
        instances: 1
        output:
          - results: logs.txt
            verdict: status.txt
      - name: run_camera
        description: Starting the CPE that simulates the camera
        run: cpe
        index: 1
        start_delay: 5
        instances: 1
        output:
          - results: logs.txt
            graphs: detail.json
        dependencies:
          - initiator
      - name: run_players
        description: Starting the CCE that simulates the consumer
        run: cce
        index: 2
        start_delay: 15
        instances: 10
        output:
          - results: logs.txt
            graphs: detail.json
        dependencies:
          - cpe
  - id: verification
    steps:
      - name: configuration
        description: Check service was configured
        step: configure_service
        condition:
          - parser:
            - file: status.txt
              find: "OK"
              value: present
              verdict: pass
      - name: user_experience
        description: Check bandwithd received
        step: run_players
        condition:
          - parser:
            - file: detail.json
              type: json
              find: 'error_rate'
              value: "< 0.05"
              verdict: pass